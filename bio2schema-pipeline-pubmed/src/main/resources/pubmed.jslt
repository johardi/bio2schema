// Name: PubMed XML Mapping to Schema.org
// Version: 1.2
// Format: JSLT (https://github.com/schibsted/jslt)

// ===== VARIABLE DEFINITIONS ======
let articleIdentifiers = flatten([.PubmedData.ArticleIdList.ArticleId])
let publicationTypes = unique([.MedlineCitation.Article.PublicationTypeList.PublicationType])
let articleTypes = [ for($publicationTypes) ."" ]
let abstractText = .MedlineCitation.Article.Abstract.AbstractText
let articleDescription = if(is-array($abstractText)) join([ for($abstractText) if(is-object(.)) ."" else . ], " ")
   else if(is-object($abstractText)) $abstractText.""
   else $abstractText
let articleAnnotatedDescriptions = if(is-array($abstractText)) [ for($abstractText) if(is-object(.)) .Label + ": " + ."" else . ]
let articleKeywords = [ for(unique([.MedlineCitation.KeywordList.Keyword])) ."" ]
let elocations = unique([.MedlineCitation.Article.ELocationID])
let articleDoi = { for($elocations) "url": "http://doi.org/" + ."" if(.EIdType=="doi") }
let articlePublicationDate =
   if (.MedlineCitation.Article.ArticleDate)
      reformat-date(.MedlineCitation.Article.ArticleDate.Year +
         "-" + .MedlineCitation.Article.ArticleDate.Month +
         "-" + .MedlineCitation.Article.ArticleDate.Day, "yyyy-MM-dd", "yyyy-MM-dd")
   else if (.PubmedData.History.PubMedPubDate)
      let pubMedPubDate = [ for (.PubmedData.History.PubMedPubDate) . if(.PubStatus=="pubmed") ]
      if ($pubMedPubDate)
         reformat-date($pubMedPubDate[0].Year +
            "-" + $pubMedPubDate[0].Month +
            "-" + $pubMedPubDate[0].Day, "yyyy-MM-dd", "yyyy-MM-dd")
let periodicalPublicationDate =
   if (.MedlineCitation.Article.Journal.JournalIssue.PubDate.Month)
      if (contains(.MedlineCitation.Article.Journal.JournalIssue.PubDate.Month, ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]))
         reformat-date(.MedlineCitation.Article.Journal.JournalIssue.PubDate.Year
            + "-" + .MedlineCitation.Article.Journal.JournalIssue.PubDate.Month, "yyyy-MMM", "yyyy-MM")
      else
         reformat-date(.MedlineCitation.Article.Journal.JournalIssue.PubDate.Year
            + "-" + .MedlineCitation.Article.Journal.JournalIssue.PubDate.Month, "yyyy-MM", "yyyy-MM")
   else
      .MedlineCitation.Article.Journal.JournalIssue.PubDate.Year
let authors = flatten([.MedlineCitation.Article.AuthorList.Author])
let firstAuthor = $authors[0]
let collaborators = $authors[1:]
let grantList = unique([.MedlineCitation.Article.GrantList.Grant])
let agencies = unique([ for($grantList) .Agency ])
let articleCitations = unique([.PubmedData.ReferenceList.Reference])
let meshHeadings = unique([.MedlineCitation.MeshHeadingList.MeshHeading])

// ===== MAPPING DEFINITION ========
{
  "@context": "http://schema.org",
  "@type": "MedicalScholarlyArticle",
  "@id": "http://identifiers.org/pubmed/" + .MedlineCitation.PMID."",
  "identifier": [ for($articleIdentifiers) {
    "@type": "PropertyValue",
    "name": .IdType,
    "value": .""
  }],
  "publicationType": $articleTypes,
  "name": .MedlineCitation.Article.ArticleTitle,
  "description": $articleDescription,
  "disambiguatingDescription": $articleAnnotatedDescriptions,
  "keywords": $articleKeywords,
  "pagination": .MedlineCitation.Article.Pagination.MedlinePgn,
  "url": $articleDoi.url,
  "datePublished": $articlePublicationDate,
  "inLanguage": .MedlineCitation.Article.Language,
  "author": if(.MedlineCitation.Article.AuthorList) flatten([
    { "@id": if($firstAuthor.Identifier.Source=="ORCID")
             "http://identifiers.org/orcid/" + capture($firstAuthor.Identifier."", "(?<value>\\d{4}-\\d{4}-\\d{4}-\\d{3}[\\d|X)])").value,
      "@type": "Person",
      "additionalType": "http://purl.org/spar/scoro/principal-author",
      "givenName": $firstAuthor.ForeName,
      "familyName": $firstAuthor.LastName,
      "affiliation": if($firstAuthor.AffiliationInfo) {
        "@type": "Organization",
        "alternateName": if(is-array($firstAuthor.AffiliationInfo)) $firstAuthor.AffiliationInfo[0].Affiliation
                else $firstAuthor.AffiliationInfo.Affiliation
      },
      "url": if ($firstAuthor.Identifier.Source=="ORCID")
             "https://orcid.org/" + capture($firstAuthor.Identifier."", "(?<value>\\d{4}-\\d{4}-\\d{4}-\\d{3}[\\d|X)])").value
    }, [ for($collaborators) {
      "@id": if(.Identifier.Source=="ORCID")
             "http://identifiers.org/orcid/" + capture(.Identifier."", "(?<value>\\d{4}-\\d{4}-\\d{4}-\\d{3}[\\d|X)])").value,
      "@type": "Person",
      "givenName": .ForeName,
      "familyName": .LastName,
      "affiliation": if(.AffiliationInfo) {
        "@type": "Organization",
        "alternateName": if(is-array(.AffiliationInfo)) .AffiliationInfo[0].Affiliation
                else .AffiliationInfo.Affiliation
      },
      "url": if (.Identifier.Source=="ORCID")
             "https://orcid.org/" + capture(.Identifier."", "(?<value>\\d{4}-\\d{4}-\\d{4}-\\d{3}[\\d|X)])").value
  } if(.LastName) ]]),
  "isPartOf": if(.MedlineCitation.Article.Journal) {
    "@type": ["Periodical" , "PublicationVolume", "PublicationIssue"],
    "name": .MedlineCitation.Article.Journal.Title,
    "alternateName": .MedlineCitation.Article.Journal.ISOAbbreviation,
    "issn": .MedlineCitation.Article.Journal.ISSN."",
    "volumeNumber": .MedlineCitation.Article.Journal.JournalIssue.Volume,
    "issueNumber": .MedlineCitation.Article.Journal.JournalIssue.Issue,
    "datePublished": $periodicalPublicationDate
  },
  "funder": [ for($agencies) {
    "@type": "Organization",
    "name": .
  }],
  "citation": [ for($articleCitations) {
    "@type": "MedicalScholarlyArticle",
    "@id": "http://identifiers.org/pubmed/" + .ArticleIdList.ArticleId.""
  } if(.)],
  "about": [ for($meshHeadings) {
    "@type": "MedicalEntity",
    "name": .DescriptorName."",
    "code": {
      "@type": "MedicalCode",
      "codeValue": .DescriptorName.UI,
      "codingSystem": "MESH"
    }
  }]
}