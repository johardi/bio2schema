// Name: ClinicalTrials.gov XML Mapping to Schema.org
// Version: 1.1
// Format: JSLT (https://github.com/schibsted/jslt)

// ===== VARIABLE DEFINITIONS ======
let studyName = if(.official_title) .official_title else .brief_title
let studyDescription = if(.detailed_description.textblock) .detailed_description.textblock else .brief_summary.textblock
let conditions = if(.condition) [ for(flatten([.condition])) { "name": . } ] else []
let interventions = if(.intervention) [ for(flatten([.intervention])) { "name": .intervention_name } ] else []
let leadSponsor = if(.sponsors.lead_sponsor) { "name": .sponsors.lead_sponsor.agency }
let collaborators = if(.sponsors.collaborator) [ for(unique([.sponsors.collaborator])) { "name": .agency } ] else []
let studyLocations = if(.location) flatten([.location])
let studyLocationInCities = unique([ for($studyLocations)
    if(.facility.address.state) .facility.address.city + ", " + .facility.address.state
    else .facility.address.city ])
let studyPublications = unique([.reference, .results_reference])

// ===== MAPPING DEFINITION ========
{
  "@context": "http://schema.org",
  "@type": "MedicalTrial",
  "@id": "http://identifiers.org/clinicaltrials/" + .id_info.nct_id,
  "identifier": unique([{
    "@type": "PropertyValue",
    "name": "NCT",
    "value": .id_info.nct_id
  }, if(.id_info.nct_alias) {
    "@type": "PropertyValue",
    "name": "NCT Alias",
    "value": .id_info.nct_alias
  }, if(.id_info.org_study_id) {
    "@type": "PropertyValue",
    "name": "Other",
    "value": .id_info.org_study_id
  }, if(.id_info.secondary_id) {
    "@type": "PropertyValue",
    "name": "Other",
    "value": .id_info.secondary_id
  }]),
  "name": $studyName,
  "description": unwrap($studyDescription),
  "status": .overall_status,
  "phase": .phase,
  "trialDesign": .study_design_info.allocation,
  "population": unwrap(.eligibility.criteria.textblock),
  "outcome": [ for(flatten([.primary_outcome]))
      .measure + if(.time_frame) " [Time frame: " + .time_frame + "]" else ""
    if(.measure)],
  "url": .required_header.url,
  "studySubject": flatten([
    [ for($conditions) {
        "@type": "MedicalEntity",
        "name": .name
      }],
    [ for($interventions) {
        "@type": "MedicalEntity",
        "name": .name
      }]
  ]),
  "sponsor": flatten([{
      "@type": "Organization",
      "name": $leadSponsor.name,
      "additionalType": "http://purl.org/spar/scoro/sponsor"
    },
    [ for($collaborators) {
        "@type": "Organization",
        "name": .name,
        "additionalType": "http://purl.org/spar/scoro/collaborator"
      }]
  ]),
  "studyLocation": [ for($studyLocationInCities) {
    "@type": "City",
    "name": .
  }],
  "subjectOf": [ for($studyPublications) {
    "@type": "MedicalScholarlyArticle",
    "@id": "http://identifiers.org/pubmed/" + .PMID,
    "name": split(.citation, "\\. ")[1],
    "url": "https://www.ncbi.nlm.nih.gov/pubmed/" + .PMID
  } if(.PMID)],
  "startDate": if (.start_date) if(.start_date."")
                 reformat-date(.start_date."", ["MMMMM dd, yyyy", "MMMMM yyyy"], ["yyyy-MM-dd", "yyyy-MM"])
               else reformat-date(.start_date, ["MMMMM dd, yyyy", "MMMMM yyyy"], ["yyyy-MM-dd", "yyyy-MM"]),
  "endDate": if (.primary_completion_date) if(.primary_completion_date."")
               reformat-date(.primary_completion_date."", ["MMMMM dd, yyyy", "MMMMM yyyy"], ["yyyy-MM-dd", "yyyy-MM"])
             else reformat-date(.primary_completion_date, ["MMMMM dd, yyyy", "MMMMM yyyy"], ["yyyy-MM-dd", "yyyy-MM"])
           else
             if (.completion_date) if(.completion_date."")
               reformat-date(.completion_date."", ["MMMMM dd, yyyy", "MMMMM yyyy"], ["yyyy-MM-dd", "yyyy-MM"])
             else reformat-date(.completion_date, ["MMMMM dd, yyyy", "MMMMM yyyy"], ["yyyy-MM-dd", "yyyy-MM"])
}